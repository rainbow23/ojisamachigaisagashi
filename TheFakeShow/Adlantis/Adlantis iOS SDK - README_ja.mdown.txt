AdLantis iOS SDK - Readme
=========================
version 1.3.3 / 2011-10-18

AdLantis iOS SDK を使用することで、 iPhone や iPod touch 用に開発されたアプリケーション内に AdLantis の広告を表示することができます。

また、 AdLantis Ad+Network for Smartphone に出稿した広告の効果を測定するため、本 SDK を通じて AdLantis へ成果ビーコンの送出を行うことができます。


対象 SDK バージョン
----------------

本ドキュメントは AdLantis iOS SDK 1.3.3 を対象としています。


前回リリース (1.3.1) からの変更点
------------------------------

* ランドスケープモード (デバイスを横方向に持った状態) においてより多くの広告が表示されるよう、通信の仕様を変更しました。
* 開発の際に Xcode のプロジェクトに含めるべきファイルを "adlantis_sdk" ディレクトリにまとめました。このディレクトリをプロジェクトにドラッグするだけで済みます。
* Unity 3.4 を用いたアプリケーションに対応しました。詳細は "unity" ディレクトリを確認してください。
* ASIHttpRequest のバージョンを 1.8.1 に更新しました。
* .lproj ディレクトリを従来の表記 ("English.lproj", "Japanese.lproj") から新しい表記 ("en.lproj", "ja.lproj") に変更しました。



配布パッケージの内容物
----------------------

配布パッケージ (`libadlantis_ios_sdk-1.3.3.zip`) には次のファイルが含まれています。

* `adlantis_sample/`

  AdLantis iOS SDK の組み込み方法のデモプロジェクトです。サンプルコードの動かし方は後述しています。

* `adlantis_sdk/`

  AdLantis iOS SDK をアプリケーションに組み込むために必要な、以下のファイルが入っています。Xcode プロジェクトに本ディレクトリごとドラッグしてください。

    * `AdlantisAd.h`, `AdlantisAdManager.h`, `AdlantisView.h`
    
      SDK を使用するためのヘッダファイルです。プロジェクト内でインクルードしてください。
    
    * `JSONKit/`, `asihttprequest/`
    
      AdLantis iOS SDK を動作させるために必要なライブラリです。
    
    * `libadlantis_ios_sdk.a`
    
      AdLantis iOS SDK 本体です。(スタティックライブラリ)
    
    * `*.lproj`
    
      AdLantis iOS SDK が表示する各種メッセージのローカライズ可能なリソースです。

サンプルコードの動かし方
---------------------
`adlantis_sample` ディレクトリ内のサンプルプロジェクトの動かし方です。

[AdLantis for Smartphone の管理画面](http://sp.www.adlantis.jp/) より広告枠を作成し、アプリケーション専用広告枠の広告コードを取得してください。広告枠コードは下記のようなスニペットです。
 
		AdlantisAdManager.sharedManager.publisherID = @"MTk1MQ%3D%3D%0A";

広告コードは、プロジェクト内の`RootViewController.m`に記述してください。

コンパイルして広告の表示を確認することができます。

#### 注意 ####

* 管理画面で広告枠を作成後、実際に広告が配信されるようになるまで最大で 1 時間ほどかかることがあります。

* 広告枠作成直後、また配信できる広告キャンペーンが一時的にない場合などは広告が配信されないことがあります。その場合、広告枠は表示されません。しばらく時間をおいてから再度テストを行ってください。


アプリケーション識別子について
------------------------------

広告枠やコンバージョンタグを作成する際、アプリケーションの識別子を AdLantis の管理画面に入力していただくことがあります。通常、 `jp.adlantis.shaojump` のように、ドメインを逆から読んだようなフォーマットになっています。

アプリケーション識別子は、アプリケーションのプロジェクトを Xcode で開き、 Info.plist の "Bundle Identifier" 項目から確認することができます。


SDKのプロジェクトへの配置
-------------------------

AdLantis iOS SDK をプロジェクトで使用できるようにするためには、以下の手順に沿ってファイルの配置を行う必要があります。

(SDKを広告の配信に用いる場合、およびコンバージョンの追跡に用いる場合のどちらでも必要です)

1. AdLantis iOS SDK をダウンロードし、適当な場所に展開します。

2. アーカイブ内の `adlantis_sdk` ディレクトリをプロジェクトディレクトリに追加してください。

3. Xcode でプロジェクトを開き、Apple iOS SDK 同梱の以下のフレームワークを Xcode のプロジェクトに追加してください。
    * `MobileCoreService.framework`
    * `CFNetwork.framework`
    * `SystemConfiguration.framework`
	* `libz.dylib`
	
4. スタティックライブラリのクラスをロードするため、Xcode プロジェクトの [情報] → [他のリンカフラグ] に `-ObjC` を追加します。


ビューへの広告枠の組み込み方法
------------------------------
まず管理画面から取得した広告枠コードを、 `AdlantisView` クラスを初期化する前に実行されるブロックに配置してください。

AdLantisViewクラスを使用した組み込みはプログラム中でインスタンスを作成するか、Interface Builderで追加する形になります。

AdLantisViewクラスで描写されるビューは、UIViewの画面下部若しくは画面上部に配置して使用されることを前提に設計されており、サイズは下記のものを想定しています。

（クリエイティブのサイズもこちらに合ったものが配信されます）

 * 縦方向画面（ポートレイトモード） : 320 × 50
 * 横方向画面（ランドスケープモード） : 480 × 32

画面方向が変化した時に画面モードに合ったサイズに変更する処理はアプリケーションの中で実装する必要があります。

その他、詳細な組み込み方法およびクラスリファレンスは [AdLantis TechNote](http://tn.adlantis.jp/iPhoneAppOwner/adlantis-iphone-sdk) をご覧ください。


コンバージョンの追跡
--------------------
AdLantisで広告を配信する際に、管理画面よりコンバージョンタグを生成してアプリケーションに組み込むことにより、広告をクリックしたユーザーが当該アプリケーションの（購入や）起動を行ったかを追跡することが可能です。

* コンバージョンの追跡の場合も [SDKのプロジェクトへの配置] の手順はすべて実行してください。

* 管理画面からコンバージョンタグを作成し、追跡したいキャンペーンを登録してください。

* コンバージョンコードの表示からコンバージョンコードを確認し、アプリケーション中の成果地点としたい場所でコールしてください。(初回起動時、In-App Purchase完了時など)

コードは次のようなフォーマットで提供されます。

	/* AdLantis ConversionTracker: [hogeApp] */
	[[AdlantisAdManager sharedManager] sendConversionTag:@"MTk%3D%0A"];

また、コンバージョンコードが処理中に正しく呼ばれているかを確認するために、コンバージョンテストの機能を提供しています。

* 管理画面のコンバージョンコードの詳細から、[コンバージョンテスト] を選択し、コンバージョンテスト用のコードを取得しはりつけます。
* コンバージョンテストのコード表示画面の下部には、最後にコンバージョンリクエストのあった時刻が表示されています。
* アプリケーションにコンバージョンテストコードを組み込み、最後にコンバージョンリクエストのあった時刻と照らしあわせながらデバッグを行ってください。


更新履歴
--------

#### 1.3.3 (2011/10/18) ####
* ランドスケープモード (デバイスを横方向に持った状態) においてより多くの広告が表示されるよう、通信の仕様を変更しました。
* 開発の際に Xcode のプロジェクトに含めるべきファイルを "adlantis_sdk" ディレクトリにまとめました。このディレクトリをプロジェクトにドラッグするだけで済みます。
* Unity 3.4 を用いたアプリケーションに対応しました。詳細は "unity" ディレクトリを確認してください。
* ASIHttpRequest のバージョンを 1.8.1 に更新しました。
* .lproj ディレクトリを従来の表記 ("English.lproj", "Japanese.lproj") から新しい表記 ("en.lproj", "ja.lproj") に変更しました。

#### 1.3.1 (2011/07/25) ####

* AdlantisAdManger がメモリリークを引き起こすことがあったバグを修正しました

#### 1.3.0 (2011/04/14) ####

* iPhone 4 や iPod touch (4th Generation) など、高解像度ディスプレイをサポートするデバイスに対して高解像度のバナーが表示されるようになりました。 (配信される広告が高解像度バナーを持っている場合に限ります)
* ライブラリ名が `libadlantis_iphone_sdk` から `libadlantis_ios_sdk` に変更されました
* 本バージョンから、Xcodeのプロジェクト設定にて `-ObjC` をその他のリンカフラグに指定する必要があります。`-all_load` や `-force_load` を指定する必要はなくなりました
* `libYAJLIOS` に代わり、 `JSONKit` をプロジェクトに組み込む必要があります。 JSONKit は本配布パッケージに同梱してあります
* `ASIHTTPRequest` のバージョンを 1.8 にアップデートしました
* 広告が提供されていない時に広告枠の描画がされないよう、`AdlantisView` は hidden と alpha のプロパティを操作しなくなりました
* `initWithFrame` メソッドを用いて広告の描画が正しく行われないバグを修正しました

#### 1.2.1 (2010/11/09) ####

小規模な修正。このバージョンでは iOS 3.1.3 から 4.2 をサポートします。 (iOS 2.xはサポートしません) 

* 新しい広告サイズ (320x50, 480x32) に対応しました
* プレビューモードで用いるアイコンをRetina Displayに対応しました
* ASIHTTPRequestライブラリが更新されました
* libYAJLiPhoneライブラリはlibYAJLIOSに名前が変更され、更新されました
* MobileCoreServices.frameworkが必要になります。ビルドの際に MobileCoreServices.frameworkをリンクしてください。

#### 1.2 (2010/04/28) ####

* 成果追跡機能を追加 

#### 1.1  (2010/02/17) ####

* プレビュー機能を追加

#### 1.0.1 (2009/12/22) ####

小規模なバグフィックス

* 特定の条件においてインプレッションが正常に報告されない問題を修正 

#### 1.0 (2009/12/14) ####

* 初期リリース 

